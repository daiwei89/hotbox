syntax = "proto3";

import "db/proto/db.proto";
import "parse/proto/parser_configs.proto";

package mldb;

// Union of all messages from client to server.
message ClientMsg {
  oneof msg {
    ClientHandshake handshake_msg = 1;
    GenericRequest generic_req = 2;
    CreateDBReq create_db_req = 3;
    IngestFileReq ingest_file_req = 4;
    DBServerShutdownReq db_server_shutdown_req = 5;
  }
}

// Union of all messages from server to client.
message ServerMsg {
  oneof msg {
    ServerHandshake handshake_msg = 1;
    GenericReply generic_reply = 2;
  }
}

// The first part of server's reply msg contains server router socket's
// identity, so no need to include that.
message ServerHandshake {
  int32 client_id = 1;
}

message ClientHandshake {
  // python needs to set a field to instantiate ClientHandshake msg.
  bool dummy = 1;
}

message GenericRequest {
  string req = 1;
}

message GenericReply {
  string reply = 1;
}

message CreateDBReq {
  DBConfig db_config = 1;
}

message IngestFileReq {
  string db_name = 1;
  string file_path = 2;
  FileFormat file_format = 3;

  // TODO(wdai): Support col_name:type_name in the first row (e.g.,
  // state:bytes).
  bool first_row_is_column_names = 4;

  // optional configuration for parsing.
  ParserConfig parser_config = 5;
}

message DBServerShutdownReq {
}
